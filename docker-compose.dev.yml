version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: cineclubs-client-dev
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    env_file:
      - ./client/.env
    command: pnpm dev --host
    networks:
      - cineclubs-network

  app:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    container_name: cineclubs-app-dev
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - ./app:/app
      - ~/.m2:/root/.m2
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/tuniclubs
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
    networks:
      - cineclubs-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    container_name: cineclubs-db-dev
    environment:
      - POSTGRES_DB=tuniclubs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - cineclubs-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data_dev: 

networks:
  cineclubs-network:
    driver: bridge 